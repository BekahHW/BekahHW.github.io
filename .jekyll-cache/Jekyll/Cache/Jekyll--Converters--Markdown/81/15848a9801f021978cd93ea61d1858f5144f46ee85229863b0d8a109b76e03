I"Ñ<p>I spend a lot of time talking about the challenges junior developers face when they are trying to break into tech. And honestly, thereâ€™s probably a whole book to write about this, a whole chapter on how most education (university, bootcamp, and online paths) doesnâ€™t prepare new devs in the ways that they need to, how junior devs cost companies money, about how some companies let others mentor junior devs just so they can poach them with huge salary increases, about how creating a system of training and transition from support roles to developer roles could be a better way to approach the issue, about how talking more openly about it and about how trying to think about how to flip the hiring process on its head is a good place to start.</p>

<p>Iâ€™m not going to write about any of that. Iâ€™m just going to point out some of the problems juniors are facing and suggest where we might want to start rethinking this process.</p>

<h2 id="clear-exploitation">Clear Exploitation</h2>

<ul>
  <li>Having junior devs write code that goes into your code base without paying them and without making that clear during an interview.</li>
  <li>
    <p>An interview is not an excuse for free work.</p>
  </li>
  <li>
    <p>Asking junior devs to do work on your projects with no intention of hiring.</p>
  </li>
  <li>
    <p>Interviewing a ton of juniors just to figure out who you can get for the least amount of money. (Tangent: when I lost my job during COVID, I interviewed for a position. I did the best on the take home test and was offered the position. But the catch was that the founder offered me $30/hr and told me that she was hoping to get me for less of an hourly wage since I was more junior and then I could work more hours.)</p>
  </li>
  <li>
    <p>Posting a job and interviewing without a real commitment to hiring.</p>
  </li>
  <li>Crushing a candidateâ€™s soul in an interviewâ€“some of it is toxic culture, and some of it is trying to check their resilienceâ€”that is not what that doesâ€”to make the candidate feel grateful for being offered a job.</li>
</ul>

<h2 id="other-problems-to-consider">Other problems to consider</h2>

<p>Portfolios donâ€™t always capture what youâ€™re looking for or are mixed with other peopleâ€™s work or are the same projects over and over and over (to-do list anyone?). New tangent: I think that being able to communicate code, ask questions, and talk about process and approach can be a better way of judging a candidate. So even opening up one of their projects from GitHub or portfolio and asking them to walk through it and talk about the process, and ask what they would do differently, where they were challenged, etc. could be as useful.</p>

<p>Giving a coding challenge doesnâ€™t ensure youâ€™re receiving a candidateâ€™s work. Iâ€™ve heard hiring managers say that theyâ€™ve hired ppl who have done well on take-home tests, but couldnâ€™t keep up with the job or couldnâ€™t explain concepts at work that they applied in the take-home.</p>

<p>Part of this whole problem is that being a junior looking for a job is a rat race. And everyone knows it.
We are exploiting desperation by over-requiring and having unreasonable expectations in interviews.
With a ton of juniors trying to break into tech, a ton of companies without an honest interest in hiring, and then juniors githubs stacked with multiple 4-hour take-home tests, spending 40 hours a week trying to find a job, and frequently for months, thereâ€™s a boat-load of problems. And itâ€™s a catch 22 because juniors need more experience. How are they supposed to do that when theyâ€™re spending 40hrs a week trying to find a job?
These circumstances do not mimic the job.</p>

<p>I donâ€™t have a solution here. I just see the problem and the frustration and know that tech is losing good people because most of it isnâ€™t even trying to figure it out. In a sense, this model is survival of the fittest, and Iâ€™m not okay with that.</p>

<p>What I want is maybe idealistic. I want to see people and not candidates. I want a clear recognition that each of these people have lives and responsibilities. I want to see the value put on communication. I want to see people and organizations who have the ability to mentor and support to do it. I was lucky to get my first job as a developer. I didnâ€™t have a take-home test or a whiteboard interview. I had a conversation. And that wonâ€™t work in every scenario, but Iâ€™ll tell you what, <strong><em>seeing</em></strong> the person in the interview is a good place to start.</p>
:ET