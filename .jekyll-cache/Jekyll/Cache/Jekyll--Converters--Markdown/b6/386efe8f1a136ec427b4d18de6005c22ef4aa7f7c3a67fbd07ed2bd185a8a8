I"…<p>One of the questions I‚Äôve been asked most frequently is also one that I asked most frequently when I first started: ‚Äúwhen will I start to feel comfortable, like I‚Äôm good enough to be a developer?‚Äù One of the most common answers was between eight and twelve months into your first job. And although I think this is accurate, it doesn‚Äôt quite get at what I think should be the question: What will help me to be more comfortable as a developer? And while I have a handful of ideas, I think one of the most important things is pairing.</p>

<p>When I taught college English I frequently had complaints about my attendance policy. Why did they have to be there? Because when you‚Äôre talking about literature, you aren‚Äôt memorizing facts, you‚Äôre learning how to talk and grow and to think critically. And the best way to do this is to both discuss your observations and analyses with other people and to listen to other people‚Äôs perspectives and approaches. And I think the same thing happens when you‚Äôre coding, and it‚Äôs one of the things that many bootcamp grads and self-taught devs don‚Äôt get the opportunity to do.</p>

<p>At its core, coding is writing and style and communication. You‚Äôre communicating with the program. You‚Äôre communicating with other developers, project managers, and users. If you can‚Äôt communicate your ideas, if you can‚Äôt write them in a way that‚Äôs logical, then things don‚Äôt work or you don‚Äôt understand why they work. I don‚Äôt think you need a complete, in-depth understanding, but you need to have a sense of why you used this approach for this problem and what this approach does.</p>

<p>Pairing not only forces you to communicate your ideas, but it also gives you the opportunity for feedback, questions, and discussion. One of the biggest challenges when you‚Äôre learning to code is <strong><em>you don‚Äôt know, what you don‚Äôt know, until you know it.</em></strong></p>

<p>Pairing can be overwhelming when you first start. So here are a couple of tips:</p>

<ul>
  <li>
    <p>Pair with someone who is one step ahead of you. Sometimes this can take the pressure off.</p>
  </li>
  <li>
    <p>Take turns driving and navigating. Sometimes you‚Äôll do the typing while someone else gives you the directions and vice versa.</p>
  </li>
  <li>
    <p>Ask a more senior dev if you can watch them work through a problem.</p>
  </li>
  <li>
    <p>If someone offers to pair with you, take them up on it, no matter how nervous you are.</p>
  </li>
  <li>
    <p>Don‚Äôt be afraid to ask for someone to pair with you on a project. It might be their open source project, your project, or something for work. If you have someone you are comfortable with, that‚Äôs great. But if you don‚Äôt, ask a slack group you‚Äôre a part of or even Twitter. In my experience, if someone offers, it‚Äôs because they want to help.</p>
  </li>
</ul>

<p>I wish I had spent more time pairing when I was learning. Learning to communicate clearly and getting comfortable asking questions was the most important part of feeling like I was a developer. The fastest way I can see to getting there is by pairing or working on a team. It also might look like the scariest, but with a supportive community there‚Äôs only progress.</p>
:ET